{"version":3,"sources":["logo.png","firebase.js","services/ItemService.js","AddItem.js","ListItem.js","ItemsList.js","actions/Types.js","services/AuthService.js","components/Login.js","actions/Auth.js","components/Register.js","services/AuthHeader.js","services/UserService.js","components/Home.js","components/Profile.js","components/BoardUser.js","components/BoardModerator.js","components/BoardAdmin.js","helpers/history.js","App.js","actions/Message.js","reducers/auth.js","reducers/message.js","reducers/index.js","store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","collection","ItemService","getAll","create","data","add","update","id","value","doc","remove","delete","AddItem","initialItemState","title","description","published","useState","item","setItem","submitted","setSubmitted","handleInputChange","event","target","name","className","onClick","htmlFor","type","required","onChange","DataService","then","catch","e","console","log","ListItem","props","key","activeStatus","currentListItem","setCurrentListItem","message","setMessage","listitem","updateActiveStatus","status","refreshList","ItemsList","currentIndex","setCurrentIndex","useCollection","orderBy","listitems","loading","error","docs","map","index","setActiveListItem","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","API_URL","username","email","password","axios","post","response","accessToken","localStorage","JSON","stringify","removeItem","role","Login","form","useRef","checkBtn","setUsername","setPassword","setLoading","isLoggedIn","useSelector","state","auth","dispatch","useDispatch","to","src","alt","onSubmit","preventDefault","current","validateAll","context","_errors","length","AuthService","payload","user","Promise","resolve","toString","reject","login","history","push","window","location","reload","ref","validations","disabled","style","display","validEmail","isEmail","vusername","vpassword","Register","setEmail","successful","setSuccessful","register","authHeader","parse","getItem","Authorization","get","headers","Home","content","setContent","useEffect","UserService","_content","Profile","currentUser","substring","substr","roles","BoardUser","createBrowserHistory","App","showModeratorBoard","setShowModeratorBoard","showAdminBoard","setShowAdminBoard","listen","includes","href","logo","exact","path","component","BoardModerator","BoardAdmin","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1c69e0c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f5249f7d.png\";","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nlet config = {\r\n  apiKey: 'AIzaSyBR5Udyrwe7vwHQHhKnHtejPMSkYhqJ4NQ',\r\n  authDomain: 'picker-app-2cc6e.firebaseapp.com',\r\n  databaseURL: 'https://picker-app-2cc6e-default-rtdb.firebaseio.com',\r\n  projectId: 'picker-app-2cc6e',\r\n  storageBucket: 'picker-app-2cc6e.appspot.com',\r\n  messagingSenderId: '923117820694',\r\n  appId: '1:923117820694:web:847f20bd04a43aa02d8e37',\r\n  measurementId: 'G-1MD9BCVF0Y',\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase.firestore();\r\n","import firebase from '../firebase';\r\n\r\nconst db = firebase.collection('/items');\r\n\r\nconst getAll = () => {\r\n  return db;\r\n};\r\n\r\nconst create = (data) => {\r\n  return db.add(data);\r\n};\r\n\r\nconst update = (id, value) => {\r\n  return db.doc(id).update(value);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return db.doc(id).delete();\r\n};\r\n\r\nconst ItemService = {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n\r\nexport default ItemService;\r\n","import React, { useState } from 'react';\r\nimport DataService from './services/ItemService.js';\r\n\r\nconst AddItem = () => {\r\n  const initialItemState = {\r\n    title: '',\r\n    description: '',\r\n    published: false,\r\n  };\r\n  const [item, setItem] = useState(initialItemState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const saveItem = () => {\r\n    var data = {\r\n      title: item.title,\r\n      description: item.description,\r\n      published: false,\r\n    };\r\n\r\n    DataService.create(data)\r\n      .then(() => {\r\n        setSubmitted(true);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const newItem = () => {\r\n    setItem(initialItemState);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div className='submit-form'>\r\n      {submitted ? (\r\n        <div>\r\n          <h4>You submitted successfully!</h4>\r\n          <button className='btn btn-success' onClick={newItem}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className='form-group'>\r\n            <label htmlFor='title'>Title</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              id='title'\r\n              required\r\n              value={item.title}\r\n              onChange={handleInputChange}\r\n              name='title'\r\n            />\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n            <label htmlFor='description'>Description</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              id='description'\r\n              required\r\n              value={item.description}\r\n              onChange={handleInputChange}\r\n              name='description'\r\n            />\r\n          </div>\r\n\r\n          <button onClick={saveItem} className='btn btn-success'>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddItem;\r\n","import React, { useState } from 'react';\r\nimport DataService from './services/ItemService';\r\n\r\nconst ListItem = (props) => {\r\n  const initialListItemState = {\r\n    key: null,\r\n    title: '',\r\n    description: '',\r\n    activeStatus: false,\r\n  };\r\n  const [currentListItem, setCurrentListItem] = useState(initialListItemState);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const { listitem } = props;\r\n  if (currentListItem.id !== listitem.id) {\r\n    setCurrentListItem(listitem);\r\n    setMessage('');\r\n  }\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setCurrentListItem({ ...currentListItem, [name]: value });\r\n  };\r\n\r\n  const updateActiveStatus = (status) => {\r\n    DataService.update(currentListItem.id, { activeStatus: status })\r\n      .then(() => {\r\n        setCurrentListItem({ ...currentListItem, activeStatus: status });\r\n        console.log(currentListItem);\r\n        if (currentListItem.activeStatus === false) {\r\n          setMessage('Updated status to active');\r\n        } else if (currentListItem.activeStatus === true) {\r\n          setMessage('Updated status to draft');\r\n        } else {\r\n          setMessage('Updated status to active');\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateListItem = () => {\r\n    const data = {\r\n      title: currentListItem.title,\r\n      description: currentListItem.description,\r\n    };\r\n\r\n    DataService.update(currentListItem.id, data)\r\n      .then(() => {\r\n        setMessage(currentListItem.title + ' was updated successfully!');\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const deleteListItem = () => {\r\n    DataService.remove(currentListItem.id)\r\n      .then(() => {\r\n        props.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentListItem ? (\r\n        <div className='edit-form'>\r\n          <h4>Edit Item</h4>\r\n          <form>\r\n            <div className='form-group'>\r\n              <label htmlFor='title'>Title</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                id='title'\r\n                name='title'\r\n                value={currentListItem.title}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <label htmlFor='description'>Description</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                id='description'\r\n                name='description'\r\n                value={currentListItem.description}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label>\r\n                <strong>Status:&nbsp;</strong>\r\n              </label>\r\n              {currentListItem.activeStatus ? 'Active' : 'Draft'}\r\n            </div>\r\n          </form>\r\n\r\n          {currentListItem.activeStatus ? (\r\n            <button\r\n              className='badge-primary mr-2 btn-e'\r\n              onClick={() => updateActiveStatus(false)}\r\n            >\r\n              Draft\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className='badge-primary mr-2 btn-e'\r\n              onClick={() => updateActiveStatus(true)}\r\n            >\r\n              Active\r\n            </button>\r\n          )}\r\n\r\n          <button className='badge-danger mr-2 btn-e' onClick={deleteListItem}>\r\n            Delete\r\n          </button>\r\n\r\n          <button\r\n            type='submit'\r\n            className='badge-success btn-e'\r\n            onClick={updateListItem}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p>Please click on a Item...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { useState } from 'react';\r\nimport { useCollection } from 'react-firebase-hooks/firestore';\r\nimport DataService from './services/ItemService';\r\nimport ListItem from './ListItem';\r\n\r\nconst ItemsList = () => {\r\n  const [currentListItem, setCurrentListItem] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n\r\n  const [listitems, loading, error] = useCollection(\r\n    DataService.getAll().orderBy('title', 'asc')\r\n  );\r\n\r\n  const refreshList = () => {\r\n    setCurrentListItem(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActiveListItem = (listitem, index) => {\r\n    const { title, description, published } = listitem.data();\r\n\r\n    setCurrentListItem({\r\n      id: listitem.id,\r\n      title,\r\n      description,\r\n      published,\r\n    });\r\n\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className='list row'>\r\n      <div className='col-md-6 mobileS'>\r\n        <h4>Items List</h4>\r\n        {error && <strong>Error: {error}</strong>}\r\n        {loading && <span>Loading...</span>}\r\n        <ul className='list-group pointer'>\r\n          {!loading &&\r\n            listitems &&\r\n            listitems.docs.map((listitem, index) => (\r\n              <li\r\n                className={\r\n                  'list-group-item ' + (index === currentIndex ? 'active' : '')\r\n                }\r\n                onClick={() => setActiveListItem(listitem, index)}\r\n                key={listitem.id}\r\n              >\r\n                {listitem.data().title}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className='col-md-6'>\r\n        {currentListItem ? (\r\n          <ListItem listitem={currentListItem} refreshList={refreshList} />\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Click on an item to edit it here</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ItemsList;\r\n","export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\nexport const SET_MESSAGE = 'SET_MESSAGE';\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\r\n","import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api/auth/';\r\n\r\nconst register = (username, email, password) => {\r\n  return axios.post(API_URL + 'signup', {\r\n    username,\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + 'signin', {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem('user', JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n};\r\n","import React, { useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport CheckButton from 'react-validation/build/button';\r\n\r\nimport { login } from '../actions/Auth';\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className='alert alert-danger' role='alert'>\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { isLoggedIn } = useSelector((state) => state.auth);\r\n  const { message } = useSelector((state) => state.message);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      dispatch(login(username, password))\r\n        .then(() => {\r\n          props.history.push('/profile');\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to='/profile' />;\r\n  }\r\n\r\n  return (\r\n    <div className='col-md-12'>\r\n      <div className='card card-container'>\r\n        <img\r\n          src='//ssl.gstatic.com/accounts/ui/avatar_2x.png'\r\n          alt='profile-img'\r\n          className='profile-img-card'\r\n        />\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className='form-group'>\r\n            <label htmlFor='username'>Username</label>\r\n            <Input\r\n              type='text'\r\n              className='form-control'\r\n              name='username'\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n            <label htmlFor='password'>Password</label>\r\n            <Input\r\n              type='password'\r\n              className='form-control'\r\n              name='password'\r\n              value={password}\r\n              onChange={onChangePassword}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n            <button className='btn btn-primary btn-block' disabled={loading}>\r\n              {loading && (\r\n                <span className='spinner-border spinner-border-sm'></span>\r\n              )}\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n\r\n          {message && (\r\n            <div className='form-group'>\r\n              <div className='alert alert-danger' role='alert'>\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: 'none' }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_MESSAGE,\r\n} from './Types';\r\n\r\nimport AuthService from '../services/AuthService';\r\n\r\nexport const register = (username, email, password) => (dispatch) => {\r\n  return AuthService.register(username, email, password).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: response.data.message,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n  return AuthService.login(username, password).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: { user: data },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import React, { useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport CheckButton from 'react-validation/build/button';\r\nimport { isEmail } from 'validator';\r\n\r\nimport { register } from '../actions/Auth';\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className='alert alert-danger' role='alert'>\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className='alert alert-danger' role='alert'>\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className='alert alert-danger' role='alert'>\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className='alert alert-danger' role='alert'>\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Register = () => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  const { message } = useSelector((state) => state.message);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    setSuccessful(false);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      dispatch(register(username, email, password))\r\n        .then(() => {\r\n          setSuccessful(true);\r\n        })\r\n        .catch(() => {\r\n          setSuccessful(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='col-md-12'>\r\n      <div className='card card-container'>\r\n        <img\r\n          src='//ssl.gstatic.com/accounts/ui/avatar_2x.png'\r\n          alt='profile-img'\r\n          className='profile-img-card'\r\n        />\r\n\r\n        <Form onSubmit={handleRegister} ref={form}>\r\n          {!successful && (\r\n            <div>\r\n              <div className='form-group'>\r\n                <label htmlFor='username'>Username</label>\r\n                <Input\r\n                  type='text'\r\n                  className='form-control'\r\n                  name='username'\r\n                  value={username}\r\n                  onChange={onChangeUsername}\r\n                  validations={[required, vusername]}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group'>\r\n                <label htmlFor='email'>Email</label>\r\n                <Input\r\n                  type='text'\r\n                  className='form-control'\r\n                  name='email'\r\n                  value={email}\r\n                  onChange={onChangeEmail}\r\n                  validations={[required, validEmail]}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group'>\r\n                <label htmlFor='password'>Password</label>\r\n                <Input\r\n                  type='password'\r\n                  className='form-control'\r\n                  name='password'\r\n                  value={password}\r\n                  onChange={onChangePassword}\r\n                  validations={[required, vpassword]}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group'>\r\n                <button className='btn btn-primary btn-block'>Sign Up</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {message && (\r\n            <div className='form-group'>\r\n              <div\r\n                className={\r\n                  successful ? 'alert alert-success' : 'alert alert-danger'\r\n                }\r\n                role='alert'\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: 'none' }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  if (user && user.accessToken) {\r\n    return { Authorization: 'Bearer ' + user.accessToken };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport authHeader from './AuthHeader';\r\n\r\nconst API_URL = 'http://localhost:8080/api/test/';\r\n\r\nconst getPublicContent = () => {\r\n  return axios.get(API_URL + 'all');\r\n};\r\n\r\nconst getUserBoard = () => {\r\n  return axios.get(API_URL + 'user', { headers: authHeader() });\r\n};\r\n\r\nconst getModeratorBoard = () => {\r\n  return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n};\r\n\r\nconst getAdminBoard = () => {\r\n  return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n};\r\n\r\nexport default {\r\n  getPublicContent,\r\n  getUserBoard,\r\n  getModeratorBoard,\r\n  getAdminBoard,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport UserService from '../services/UserService';\r\n\r\nconst Home = () => {\r\n  const [content, setContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    UserService.getPublicContent().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response && error.response.data) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <header className='jumbotron'>\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Profile = () => {\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n\r\n  if (!currentUser) {\r\n    return <Redirect to='/login' />;\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <header className='jumbotron'>\r\n        <h3>\r\n          <strong>{currentUser.username}</strong> Profile\r\n        </h3>\r\n      </header>\r\n      <p>\r\n        <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{' '}\r\n        {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n      </p>\r\n      <p>\r\n        <strong>Id:</strong> {currentUser.id}\r\n      </p>\r\n      <p>\r\n        <strong>Email:</strong> {currentUser.email}\r\n      </p>\r\n      <strong>Authorities:</strong>\r\n      <ul>\r\n        {currentUser.roles &&\r\n          currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport UserService from '../services/UserService';\r\n\r\nconst BoardUser = () => {\r\n  const [content, setContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    UserService.getUserBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <header className='jumbotron'>\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardUser;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport UserService from '../services/UserService';\r\n\r\nconst BoardUser = () => {\r\n  const [content, setContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    UserService.getModeratorBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <header className='jumbotron'>\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardUser;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport UserService from '../services/UserService';\r\n\r\nconst BoardUser = () => {\r\n  const [content, setContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    UserService.getAdminBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <header className='jumbotron'>\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardUser;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Switch, Route, Link, HashRouter } from 'react-router-dom';\r\nimport './App.css';\r\nimport logo from './logo.png';\r\nimport AddItem from './AddItem';\r\nimport ItemsList from './ItemsList';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport Home from './components/Home';\r\nimport Profile from './components/Profile';\r\nimport BoardUser from './components/BoardUser';\r\nimport BoardModerator from './components/BoardModerator';\r\nimport BoardAdmin from './components/BoardAdmin';\r\n\r\nimport { logout } from './actions/Auth';\r\nimport { clearMessage } from './actions/Message';\r\n\r\nimport { history } from './helpers/history';\r\n\r\nfunction App() {\r\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\r\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\r\n\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    history.listen((location) => {\r\n      dispatch(clearMessage()); // clear message when changing location\r\n    });\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setShowModeratorBoard(currentUser.roles.includes('ROLE_MODERATOR'));\r\n      setShowAdminBoard(currentUser.roles.includes('ROLE_ADMIN'));\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const logOut = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <HashRouter history={history}>\r\n      <div>\r\n        <nav className='navbar navbar-expand navbar-dark bg-dark'>\r\n          <a href='/ItemsList' className='navbar-brand'>\r\n            <img src={logo} alt='logo' className='logo'></img>\r\n          </a>\r\n          <div className='navbar-nav mr-auto'>\r\n            <li className='nav-item'>\r\n              <Link to={'/ItemsList'} className='nav-link'>\r\n                View List\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link to={'/AddItem'} className='nav-link'>\r\n                Add Items\r\n              </Link>\r\n            </li>\r\n          </div>\r\n          <div className='navbar-nav mr-auto'>\r\n            <li className='nav-item'>\r\n              <Link to={'/home'} className='nav-link'>\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            {showModeratorBoard && (\r\n              <li className='nav-item'>\r\n                <Link to={'/mod'} className='nav-link'>\r\n                  Moderator Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {showAdminBoard && (\r\n              <li className='nav-item'>\r\n                <Link to={'/admin'} className='nav-link'>\r\n                  Admin Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {currentUser && (\r\n              <li className='nav-item'>\r\n                <Link to={'/user'} className='nav-link'>\r\n                  User\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </div>\r\n\r\n          {currentUser ? (\r\n            <div className='navbar-nav ml-auto'>\r\n              <li className='nav-item'>\r\n                <Link to={'/profile'} className='nav-link'>\r\n                  {currentUser.username}\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <a href='/login' className='nav-link' onClick={logOut}>\r\n                  LogOut\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className='navbar-nav ml-auto'>\r\n              <li className='nav-item'>\r\n                <Link to={'/login'} className='nav-link'>\r\n                  Login\r\n                </Link>\r\n              </li>\r\n\r\n              <li className='nav-item'>\r\n                <Link to={'/register'} className='nav-link'>\r\n                  Sign Up\r\n                </Link>\r\n              </li>\r\n            </div>\r\n          )}\r\n        </nav>\r\n        <div className='container mt-3'>\r\n          <Switch>\r\n            <Route exact path={['/', '/home']} component={Home} />\r\n            <Route exact path='/login' component={Login} />\r\n            <Route exact path='/register' component={Register} />\r\n            <Route exact path='/profile' component={Profile} />\r\n            <Route path='/user' component={BoardUser} />\r\n            <Route path='/mod' component={BoardModerator} />\r\n            <Route path='/admin' component={BoardAdmin} />\r\n            <Route exact path='/ItemsList' component={ItemsList} />\r\n            <Route exact path='/AddItem' component={AddItem} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\nexport default App;\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from './Types';\r\n\r\nexport const setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE,\r\n});\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from '../actions/Types';\r\n\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from '../actions/Types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: '' };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport message from './message';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}